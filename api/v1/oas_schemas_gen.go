// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// AddMetadataFormatOK is response for AddMetadataFormat operation.
type AddMetadataFormatOK struct{}

// Ref: #/components/schemas/AddMetadataFormatRequest
type AddMetadataFormatRequest struct {
	Prefix    string `json:"prefix"`
	Schema    string `json:"schema"`
	Namespace string `json:"namespace"`
}

// GetPrefix returns the value of Prefix.
func (s *AddMetadataFormatRequest) GetPrefix() string {
	return s.Prefix
}

// GetSchema returns the value of Schema.
func (s *AddMetadataFormatRequest) GetSchema() string {
	return s.Schema
}

// GetNamespace returns the value of Namespace.
func (s *AddMetadataFormatRequest) GetNamespace() string {
	return s.Namespace
}

// SetPrefix sets the value of Prefix.
func (s *AddMetadataFormatRequest) SetPrefix(val string) {
	s.Prefix = val
}

// SetSchema sets the value of Schema.
func (s *AddMetadataFormatRequest) SetSchema(val string) {
	s.Schema = val
}

// SetNamespace sets the value of Namespace.
func (s *AddMetadataFormatRequest) SetNamespace(val string) {
	s.Namespace = val
}

// AddRecordOK is response for AddRecord operation.
type AddRecordOK struct{}

// Ref: #/components/schemas/AddRecordRequest
type AddRecordRequest struct {
	Identifier     string   `json:"identifier"`
	MetadataPrefix string   `json:"metadata_prefix"`
	Metadata       string   `json:"metadata"`
	SetSpecs       []string `json:"set_specs"`
}

// GetIdentifier returns the value of Identifier.
func (s *AddRecordRequest) GetIdentifier() string {
	return s.Identifier
}

// GetMetadataPrefix returns the value of MetadataPrefix.
func (s *AddRecordRequest) GetMetadataPrefix() string {
	return s.MetadataPrefix
}

// GetMetadata returns the value of Metadata.
func (s *AddRecordRequest) GetMetadata() string {
	return s.Metadata
}

// GetSetSpecs returns the value of SetSpecs.
func (s *AddRecordRequest) GetSetSpecs() []string {
	return s.SetSpecs
}

// SetIdentifier sets the value of Identifier.
func (s *AddRecordRequest) SetIdentifier(val string) {
	s.Identifier = val
}

// SetMetadataPrefix sets the value of MetadataPrefix.
func (s *AddRecordRequest) SetMetadataPrefix(val string) {
	s.MetadataPrefix = val
}

// SetMetadata sets the value of Metadata.
func (s *AddRecordRequest) SetMetadata(val string) {
	s.Metadata = val
}

// SetSetSpecs sets the value of SetSpecs.
func (s *AddRecordRequest) SetSetSpecs(val []string) {
	s.SetSpecs = val
}

// AddSetOK is response for AddSet operation.
type AddSetOK struct{}

// Ref: #/components/schemas/AddSetRequest
type AddSetRequest struct {
	Spec        string    `json:"spec"`
	Name        string    `json:"name"`
	Description OptString `json:"description"`
}

// GetSpec returns the value of Spec.
func (s *AddSetRequest) GetSpec() string {
	return s.Spec
}

// GetName returns the value of Name.
func (s *AddSetRequest) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *AddSetRequest) GetDescription() OptString {
	return s.Description
}

// SetSpec sets the value of Spec.
func (s *AddSetRequest) SetSpec(val string) {
	s.Spec = val
}

// SetName sets the value of Name.
func (s *AddSetRequest) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *AddSetRequest) SetDescription(val OptString) {
	s.Description = val
}

// DeleteRecordOK is response for DeleteRecord operation.
type DeleteRecordOK struct{}

// Ref: #/components/schemas/DeleteRecordRequest
type DeleteRecordRequest struct {
	Identifier string `json:"identifier"`
}

// GetIdentifier returns the value of Identifier.
func (s *DeleteRecordRequest) GetIdentifier() string {
	return s.Identifier
}

// SetIdentifier sets the value of Identifier.
func (s *DeleteRecordRequest) SetIdentifier(val string) {
	s.Identifier = val
}

// Ref: #/components/schemas/Error
type Error struct {
	Code    int64  `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *Error) GetCode() int64 {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val int64) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

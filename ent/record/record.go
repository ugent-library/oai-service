// Code generated by ent, DO NOT EDIT.

package record

import (
	"time"
)

const (
	// Label holds the string label denoting the record type in the database.
	Label = "record"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldMetadataFormatID holds the string denoting the metadata_format_id field in the database.
	FieldMetadataFormatID = "metadata_format_id"
	// FieldIdentifier holds the string denoting the identifier field in the database.
	FieldIdentifier = "identifier"
	// FieldMetadata holds the string denoting the metadata field in the database.
	FieldMetadata = "metadata"
	// FieldDeleted holds the string denoting the deleted field in the database.
	FieldDeleted = "deleted"
	// FieldDatestamp holds the string denoting the datestamp field in the database.
	FieldDatestamp = "datestamp"
	// EdgeMetadataFormat holds the string denoting the metadata_format edge name in mutations.
	EdgeMetadataFormat = "metadata_format"
	// EdgeSets holds the string denoting the sets edge name in mutations.
	EdgeSets = "sets"
	// Table holds the table name of the record in the database.
	Table = "records"
	// MetadataFormatTable is the table that holds the metadata_format relation/edge.
	MetadataFormatTable = "records"
	// MetadataFormatInverseTable is the table name for the MetadataFormat entity.
	// It exists in this package in order to avoid circular dependency with the "metadataformat" package.
	MetadataFormatInverseTable = "metadata_formats"
	// MetadataFormatColumn is the table column denoting the metadata_format relation/edge.
	MetadataFormatColumn = "metadata_format_id"
	// SetsTable is the table that holds the sets relation/edge. The primary key declared below.
	SetsTable = "record_sets"
	// SetsInverseTable is the table name for the Set entity.
	// It exists in this package in order to avoid circular dependency with the "set" package.
	SetsInverseTable = "sets"
)

// Columns holds all SQL columns for record fields.
var Columns = []string{
	FieldID,
	FieldMetadataFormatID,
	FieldIdentifier,
	FieldMetadata,
	FieldDeleted,
	FieldDatestamp,
}

var (
	// SetsPrimaryKey and SetsColumn2 are the table columns denoting the
	// primary key for the sets relation (M2M).
	SetsPrimaryKey = []string{"record_id", "set_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultDeleted holds the default value on creation for the "deleted" field.
	DefaultDeleted bool
	// DefaultDatestamp holds the default value on creation for the "datestamp" field.
	DefaultDatestamp func() time.Time
	// UpdateDefaultDatestamp holds the default value on update for the "datestamp" field.
	UpdateDefaultDatestamp func() time.Time
)
